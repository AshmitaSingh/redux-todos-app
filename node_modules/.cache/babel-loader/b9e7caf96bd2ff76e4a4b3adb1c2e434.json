{"ast":null,"code":"import _objectSpread from \"C:/Users/HP/Documents/WDB/React/Redux/redux-todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\WDB\\\\React\\\\Redux\\\\redux-todo-app\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Paper, List, Divider } from '@mui/material';\nimport TodoItem from \"./TodoItem\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList() {\n  _s();\n  var _this = this;\n  var todos = useSelector(function (state) {\n    return state.tasks;\n  });\n  return (\n    /*#__PURE__*/\n    // <ul className=\"todos-list\">\n    //   {todos.map((todo) => (\n    //     <TodoItem\n    //       key={todo.id}\n    //       id={todo.id}\n    //       task={todo.task}\n    //       completed={todo.completed}\n    //     />\n    //   ))}\n    // </ul>\n    _jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: todos.map(function (todo) {\n          return (\n            /*#__PURE__*/\n            // To add a key to a fragment, we have to use the long-hand version\n            // rather than <> </>, we have to use <React.Fragment>\n            _jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_createElement(TodoItem, _objectSpread(_objectSpread({}, todo), {}, {\n                key: todo.id,\n                id: todo.id,\n                task: todo.task,\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 29\n                }\n              })), index < todos.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 58\n              }, _this)]\n            }, todo.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 25\n            }, _this)\n          );\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(TodoList, \"yf5/CXitEfCS89mS1QxI4IUHBGo=\", false, function () {\n  return [useSelector];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useSelector","Paper","List","Divider","TodoItem","TodoList","todos","state","tasks","map","todo","id","task","index","length"],"sources":["C:/Users/HP/Documents/WDB/React/Redux/redux-todo-app/src/components/TodoList.js"],"sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Paper, List, Divider } from '@mui/material';\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nfunction TodoList() {\r\n  const todos = useSelector((state) => state.tasks);\r\n  return (\r\n    // <ul className=\"todos-list\">\r\n    //   {todos.map((todo) => (\r\n    //     <TodoItem\r\n    //       key={todo.id}\r\n    //       id={todo.id}\r\n    //       task={todo.task}\r\n    //       completed={todo.completed}\r\n    //     />\r\n    //   ))}\r\n    // </ul>\r\n    <Paper>\r\n                <List>\r\n                    {todos.map((todo) => (\r\n                        // To add a key to a fragment, we have to use the long-hand version\r\n                        // rather than <> </>, we have to use <React.Fragment>\r\n                        <React.Fragment key={todo.id}>\r\n                            <TodoItem\r\n                                {...todo}\r\n                                key={todo.id}\r\n                                id={todo.id}\r\n                                task={todo.task}\r\n                                \r\n                            />\r\n                            {index < todos.length - 1 && <Divider />}\r\n                        </React.Fragment>\r\n                    ))}\r\n                </List>\r\n            </Paper>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,KAAK,EAAEC,IAAI,EAAEC,OAAO,QAAQ,eAAe;AACpD,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAAA;AAElC,SAASC,QAAQ,GAAG;EAAA;EAAA;EAClB,IAAMC,KAAK,GAAGN,WAAW,CAAC,UAACO,KAAK;IAAA,OAAKA,KAAK,CAACC,KAAK;EAAA,EAAC;EACjD;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAC,KAAK;MAAA,uBACM,QAAC,IAAI;QAAA,UACAF,KAAK,CAACG,GAAG,CAAC,UAACC,IAAI;UAAA;YAAA;YACZ;YACA;YACA,QAAC,KAAK,CAAC,QAAQ;cAAA,wBACX,eAAC,QAAQ,kCACDA,IAAI;gBACR,GAAG,EAAEA,IAAI,CAACC,EAAG;gBACb,EAAE,EAAED,IAAI,CAACC,EAAG;gBACZ,IAAI,EAAED,IAAI,CAACE,IAAK;gBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cAAA,GAElB,EACDC,KAAK,GAAGP,KAAK,CAACQ,MAAM,GAAG,CAAC,iBAAI,QAAC,OAAO;gBAAA;gBAAA;gBAAA;cAAA,SAAG;YAAA,GARvBJ,IAAI,CAACC,EAAE;cAAA;cAAA;cAAA;YAAA;UASX;QAAA,CACpB;MAAC;QAAA;QAAA;QAAA;MAAA;IACC;MAAA;MAAA;MAAA;IAAA;EACH;AAEpB;AAAC,GAhCQN,QAAQ;EAAA,QACDL,WAAW;AAAA;AAAA,KADlBK,QAAQ;AAkCjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
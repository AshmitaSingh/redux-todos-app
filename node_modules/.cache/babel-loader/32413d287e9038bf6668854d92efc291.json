{"ast":null,"code":"import _slicedToArray from \"C:/Users/HP/Documents/WDB/React/Redux/redux-todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\WDB\\\\React\\\\Redux\\\\redux-todo-app\\\\src\\\\components\\\\AddTodo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Paper, TextField } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodo } from \"../redux/taskSlice\";\nimport useInputState from \"../hooks/useInputState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTodo() {\n  _s();\n  var dispatch = useDispatch();\n  var _useInputState = useInputState(\"\"),\n    _useInputState2 = _slicedToArray(_useInputState, 3),\n    value = _useInputState2[0],\n    handleChange = _useInputState2[1],\n    reset = _useInputState2[2];\n  var addNewTask = function addNewTask(e) {\n    e.preventDefault();\n\n    // Check if input field is empty\n    if (value.trim().length === 0) {\n      alert(\"Please enter a task!\");\n      reset();\n      return;\n    }\n\n    // disptaching the action of adding a new task to the list\n    dispatch(addTodo({\n      task: value\n    }));\n\n    // To empty the input field after hitting the button\n    reset();\n  };\n  return (\n    /*#__PURE__*/\n    // <div className=\"add-todo\">\n    //   <input\n    //     type=\"text\"\n    //     className=\"new-todo-input\"\n    //     placeholder=\"Enter a new task\"\n    //     value={newTask}\n    //     onChange={(e) => setNewTask(e.target.value)}\n    //   />\n    //   <button className=\"new-todo-button\" onClick={addNewTask}>\n    //     Add New Todo\n    //   </button>\n    // </div>\n    _jsxDEV(Paper, {\n      style: {\n        margin: '1rem 0',\n        padding: '0 1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addNewTask,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          value: value,\n          onChange: handleChange,\n          margin: \"normal\",\n          label: \"Add New Todo\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(AddTodo, \"iaVA2wpQa9mgLSDspbvuNTCpg0A=\", false, function () {\n  return [useDispatch, useInputState];\n});\n_c = AddTodo;\nexport default AddTodo;\nvar _c;\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["React","useState","Paper","TextField","useDispatch","addTodo","useInputState","AddTodo","dispatch","value","handleChange","reset","addNewTask","e","preventDefault","trim","length","alert","task","margin","padding"],"sources":["C:/Users/HP/Documents/WDB/React/Redux/redux-todo-app/src/components/AddTodo.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Paper, TextField } from \"@mui/material\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../redux/taskSlice\";\r\nimport useInputState from \"../hooks/useInputState\";\r\n\r\nfunction AddTodo() {\r\n  const dispatch = useDispatch();\r\n  const [value, handleChange, reset] = useInputState(\"\");\r\n\r\n  const addNewTask = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check if input field is empty\r\n    if (value.trim().length === 0) {\r\n      alert(\"Please enter a task!\");\r\n      reset();\r\n      return;\r\n    }\r\n\r\n    // disptaching the action of adding a new task to the list\r\n    dispatch(\r\n      addTodo({\r\n        task: value,\r\n      })\r\n    );\r\n\r\n    // To empty the input field after hitting the button\r\n    reset();\r\n  };\r\n  return (\r\n    // <div className=\"add-todo\">\r\n    //   <input\r\n    //     type=\"text\"\r\n    //     className=\"new-todo-input\"\r\n    //     placeholder=\"Enter a new task\"\r\n    //     value={newTask}\r\n    //     onChange={(e) => setNewTask(e.target.value)}\r\n    //   />\r\n    //   <button className=\"new-todo-button\" onClick={addNewTask}>\r\n    //     Add New Todo\r\n    //   </button>\r\n    // </div>\r\n    <Paper style={{ margin: '1rem 0', padding: '0 1rem' }}>\r\n      <form onSubmit={addNewTask}>\r\n        <TextField\r\n          value={value}\r\n          onChange={handleChange}\r\n          margin=\"normal\"\r\n          label=\"Add New Todo\"\r\n          fullWidth\r\n        />\r\n      </form>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default AddTodo;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,SAAS,QAAQ,eAAe;AAChD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,OAAOC,aAAa,MAAM,wBAAwB;AAAC;AAEnD,SAASC,OAAO,GAAG;EAAA;EACjB,IAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,qBAAqCE,aAAa,CAAC,EAAE,CAAC;IAAA;IAA/CG,KAAK;IAAEC,YAAY;IAAEC,KAAK;EAEjC,IAAMC,UAAU,GAAG,SAAbA,UAAU,CAAIC,CAAC,EAAK;IACxBA,CAAC,CAACC,cAAc,EAAE;;IAElB;IACA,IAAIL,KAAK,CAACM,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;MAC7BC,KAAK,CAAC,sBAAsB,CAAC;MAC7BN,KAAK,EAAE;MACP;IACF;;IAEA;IACAH,QAAQ,CACNH,OAAO,CAAC;MACNa,IAAI,EAAET;IACR,CAAC,CAAC,CACH;;IAED;IACAE,KAAK,EAAE;EACT,CAAC;EACD;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAC,KAAK;MAAC,KAAK,EAAE;QAAEQ,MAAM,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAS,CAAE;MAAA,uBACpD;QAAM,QAAQ,EAAER,UAAW;QAAA,uBACzB,QAAC,SAAS;UACR,KAAK,EAAEH,KAAM;UACb,QAAQ,EAAEC,YAAa;UACvB,MAAM,EAAC,QAAQ;UACf,KAAK,EAAC,cAAc;UACpB,SAAS;QAAA;UAAA;UAAA;UAAA;QAAA;MACT;QAAA;QAAA;QAAA;MAAA;IACG;MAAA;MAAA;MAAA;IAAA;EACD;AAEZ;AAAC,GAjDQH,OAAO;EAAA,QACGH,WAAW,EACSE,aAAa;AAAA;AAAA,KAF3CC,OAAO;AAmDhB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
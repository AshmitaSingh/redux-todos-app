{"ast":null,"code":"import _slicedToArray from \"C:/Users/HP/Documents/WDB/React/Redux/redux-todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\WDB\\\\React\\\\Redux\\\\redux-todo-app\\\\src\\\\components\\\\AddTodo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodo } from \"../redux/taskSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddTodo() {\n  _s();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    newTask = _useState2[0],\n    setNewTask = _useState2[1];\n  var dispatch = useDispatch();\n  var addNewTask = function addNewTask(e) {\n    e.preventDefault();\n\n    // Check if input field is empty\n    if (newTask.trim().length === 0) {\n      alert(\"Please enter a task!\");\n      setNewTask(\"\");\n      return;\n    }\n\n    // disptaching the action of adding a new task to the list\n    dispatch(addTodo({\n      task: newTask\n    })\n    // console.log(newTask);\n    );\n\n    // To empty the input field after hitting the button\n    setNewTask(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"new-todo-input\",\n      placeholder: \"Enter a new task\",\n      value: newTask,\n      onChange: function onChange(e) {\n        return setNewTask(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"new-todo-button\",\n      onClick: addNewTask,\n      children: \"Add New Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(AddTodo, \"plfhy12T9ADrzJ9xqRdfc5WaAtk=\", false, function () {\n  return [useDispatch];\n});\n_c = AddTodo;\nexport default AddTodo;\nvar _c;\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["React","useState","useDispatch","addTodo","AddTodo","newTask","setNewTask","dispatch","addNewTask","e","preventDefault","trim","length","alert","task","target","value"],"sources":["C:/Users/HP/Documents/WDB/React/Redux/redux-todo-app/src/components/AddTodo.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../redux/taskSlice\";\r\n\r\nfunction AddTodo() {\r\n  const [newTask, setNewTask] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const addNewTask = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check if input field is empty\r\n    if (newTask.trim().length === 0) {\r\n      alert(\"Please enter a task!\");\r\n\r\n      setNewTask(\"\");\r\n      return;\r\n    }\r\n\r\n    // disptaching the action of adding a new task to the list\r\n    dispatch(\r\n      addTodo({\r\n        task: newTask\r\n      })\r\n      // console.log(newTask);\r\n    );\r\n\r\n    // To empty the input field after hitting the button\r\n    setNewTask(\"\");\r\n  };\r\n  return (\r\n    <div className=\"add-todo\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"new-todo-input\"\r\n        placeholder=\"Enter a new task\"\r\n        value={newTask}\r\n        onChange={(e) => setNewTask(e.target.value)}\r\n      />\r\n      <button className=\"new-todo-button\" onClick={addNewTask}>\r\n        Add New Todo\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTodo;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,OAAO,QAAQ,oBAAoB;AAAC;AAE7C,SAASC,OAAO,GAAG;EAAA;EACjB,gBAA8BH,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAnCI,OAAO;IAAEC,UAAU;EAC1B,IAAMC,QAAQ,GAAGL,WAAW,EAAE;EAE9B,IAAMM,UAAU,GAAG,SAAbA,UAAU,CAAIC,CAAC,EAAK;IACxBA,CAAC,CAACC,cAAc,EAAE;;IAElB;IACA,IAAIL,OAAO,CAACM,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;MAC/BC,KAAK,CAAC,sBAAsB,CAAC;MAE7BP,UAAU,CAAC,EAAE,CAAC;MACd;IACF;;IAEA;IACAC,QAAQ,CACNJ,OAAO,CAAC;MACNW,IAAI,EAAET;IACR,CAAC;IACD;IAAA,CACD;;IAED;IACAC,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,wBACvB;MACE,IAAI,EAAC,MAAM;MACX,SAAS,EAAC,gBAAgB;MAC1B,WAAW,EAAC,kBAAkB;MAC9B,KAAK,EAAED,OAAQ;MACf,QAAQ,EAAE,kBAACI,CAAC;QAAA,OAAKH,UAAU,CAACG,CAAC,CAACM,MAAM,CAACC,KAAK,CAAC;MAAA;IAAC;MAAA;MAAA;MAAA;IAAA,QAC5C,eACF;MAAQ,SAAS,EAAC,iBAAiB;MAAC,OAAO,EAAER,UAAW;MAAA,UAAC;IAEzD;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GAxCQJ,OAAO;EAAA,QAEGF,WAAW;AAAA;AAAA,KAFrBE,OAAO;AA0ChB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
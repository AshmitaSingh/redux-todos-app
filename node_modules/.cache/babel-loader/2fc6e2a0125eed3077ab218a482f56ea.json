{"ast":null,"code":"import _slicedToArray from \"C:/Users/HP/Documents/WDB/React/Redux/redux-todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\WDB\\\\React\\\\Redux\\\\redux-todo-app\\\\src\\\\components\\\\TodoItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ListItem, ListItemText, Checkbox, IconButton, ListItemSecondaryAction } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteTodo, toggleTodo } from \"../redux/taskSlice\";\nimport useToggle from \"../hooks/useToggle\";\nimport EditTodo from \"./EditTodo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TodoItem(_ref) {\n  _s();\n  var id = _ref.id,\n    task = _ref.task,\n    completed = _ref.completed;\n  var dispatch = useDispatch();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    checked = _useState2[0],\n    setChecked = _useState2[1];\n  var _useToggle = useToggle(false),\n    _useToggle2 = _slicedToArray(_useToggle, 2),\n    isEditing = _useToggle2[0],\n    toggle = _useToggle2[1];\n  var handleDeleteTodo = function handleDeleteTodo() {\n    dispatch(deleteTodo({\n      id: id\n    }));\n  };\n  var handleToggle = function handleToggle() {\n    setChecked(!checked);\n    dispatch(toggleTodo({\n      id: id,\n      completed: completed\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    style: {\n      height: '52px'\n    },\n    children: isEditing ? /*#__PURE__*/_jsxDEV(EditTodo, {\n      id: id,\n      task: task,\n      toggleEditForm: toggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        tabIndex: -1,\n        checked: checked,\n        onClick: handleToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        style: {\n          textDecoration: checked ? \"line-through\" : \"none\"\n        },\n        children: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Delete\",\n          onClick: handleDeleteTodo,\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n            color: \"error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Edit\",\n          onClick: toggle,\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {\n            sx: {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoItem, \"InmN1jsPtW/oU9IGRqoLBgEeILE=\", false, function () {\n  return [useDispatch, useToggle];\n});\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useState","ListItem","ListItemText","Checkbox","IconButton","ListItemSecondaryAction","DeleteIcon","EditIcon","useDispatch","deleteTodo","toggleTodo","useToggle","EditTodo","TodoItem","id","task","completed","dispatch","checked","setChecked","isEditing","toggle","handleDeleteTodo","handleToggle","height","textDecoration"],"sources":["C:/Users/HP/Documents/WDB/React/Redux/redux-todo-app/src/components/TodoItem.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  Checkbox,\r\n  IconButton,\r\n  ListItemSecondaryAction,\r\n} from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteTodo, toggleTodo } from \"../redux/taskSlice\";\r\nimport useToggle from \"../hooks/useToggle\";\r\nimport EditTodo from \"./EditTodo\";\r\n\r\nfunction TodoItem({ id, task, completed }) {\r\n  const dispatch = useDispatch();\r\n  const [checked, setChecked] = useState(false);\r\n  const [isEditing, toggle] = useToggle(false);\r\n\r\n  const handleDeleteTodo = () => {\r\n    dispatch(\r\n      deleteTodo({\r\n        id: id,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setChecked(!checked);\r\n    dispatch(\r\n      toggleTodo({\r\n        id: id,\r\n        completed: completed,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ListItem style={{ height: '52px' }}>\r\n      {isEditing ? (\r\n        <EditTodo id={id} task={task} toggleEditForm={toggle} />\r\n      ) : (\r\n        <>\r\n          <Checkbox tabIndex={-1} checked={checked} onClick={handleToggle} />\r\n          <ListItemText\r\n            style={{ textDecoration: checked ? \"line-through\" : \"none\" }}\r\n          >\r\n            {task}\r\n          </ListItemText>\r\n          <ListItemSecondaryAction>\r\n            <IconButton aria-label=\"Delete\" onClick={handleDeleteTodo}>\r\n              <DeleteIcon color=\"error\"/>\r\n            </IconButton>\r\n            <IconButton aria-label=\"Edit\" onClick={toggle}>\r\n              <EditIcon sx={{}}/>\r\n            </IconButton>\r\n          </ListItemSecondaryAction>\r\n        </>\r\n      )}\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nexport default TodoItem;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,QAAQ,EACRC,YAAY,EACZC,QAAQ,EACRC,UAAU,EACVC,uBAAuB,QAClB,eAAe;AACtB,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,EAAEC,UAAU,QAAQ,oBAAoB;AAC3D,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAAA;AAElC,SAASC,QAAQ,OAA0B;EAAA;EAAA,IAAvBC,EAAE,QAAFA,EAAE;IAAEC,IAAI,QAAJA,IAAI;IAAEC,SAAS,QAATA,SAAS;EACrC,IAAMC,QAAQ,GAAGT,WAAW,EAAE;EAC9B,gBAA8BR,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtCkB,OAAO;IAAEC,UAAU;EAC1B,iBAA4BR,SAAS,CAAC,KAAK,CAAC;IAAA;IAArCS,SAAS;IAAEC,MAAM;EAExB,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgB,GAAS;IAC7BL,QAAQ,CACNR,UAAU,CAAC;MACTK,EAAE,EAAEA;IACN,CAAC,CAAC,CACH;EACH,CAAC;EAED,IAAMS,YAAY,GAAG,SAAfA,YAAY,GAAS;IACzBJ,UAAU,CAAC,CAACD,OAAO,CAAC;IACpBD,QAAQ,CACNP,UAAU,CAAC;MACTI,EAAE,EAAEA,EAAE;MACNE,SAAS,EAAEA;IACb,CAAC,CAAC,CACH;EACH,CAAC;EAED,oBACE,QAAC,QAAQ;IAAC,KAAK,EAAE;MAAEQ,MAAM,EAAE;IAAO,CAAE;IAAA,UACjCJ,SAAS,gBACR,QAAC,QAAQ;MAAC,EAAE,EAAEN,EAAG;MAAC,IAAI,EAAEC,IAAK;MAAC,cAAc,EAAEM;IAAO;MAAA;MAAA;MAAA;IAAA,QAAG,gBAExD;MAAA,wBACE,QAAC,QAAQ;QAAC,QAAQ,EAAE,CAAC,CAAE;QAAC,OAAO,EAAEH,OAAQ;QAAC,OAAO,EAAEK;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,eACnE,QAAC,YAAY;QACX,KAAK,EAAE;UAAEE,cAAc,EAAEP,OAAO,GAAG,cAAc,GAAG;QAAO,CAAE;QAAA,UAE5DH;MAAI;QAAA;QAAA;QAAA;MAAA,QACQ,eACf,QAAC,uBAAuB;QAAA,wBACtB,QAAC,UAAU;UAAC,cAAW,QAAQ;UAAC,OAAO,EAAEO,gBAAiB;UAAA,uBACxD,QAAC,UAAU;YAAC,KAAK,EAAC;UAAO;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QAChB,eACb,QAAC,UAAU;UAAC,cAAW,MAAM;UAAC,OAAO,EAAED,MAAO;UAAA,uBAC5C,QAAC,QAAQ;YAAC,EAAE,EAAE,CAAC;UAAE;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QACR;MAAA;QAAA;QAAA;QAAA;MAAA,QACW;IAAA;EAE7B;IAAA;IAAA;IAAA;EAAA,QACQ;AAEf;AAAC,GA/CQR,QAAQ;EAAA,QACEL,WAAW,EAEAG,SAAS;AAAA;AAAA,KAH9BE,QAAQ;AAiDjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}